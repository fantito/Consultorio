//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consultorio.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ConsultorioContext : DbContext
    {
        public ConsultorioContext()
            : base("name=ConsultorioContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Pacientes> Pacientes { get; set; }
        public virtual DbSet<Personas> Personas { get; set; }
        public virtual DbSet<Profesionales> Profesionales { get; set; }
        public virtual DbSet<DocumentoTipos> DocumentoTipos { get; set; }
        public virtual DbSet<Especialidades> Especialidades { get; set; }
        public virtual DbSet<PersonasTelefonos> PersonasTelefonos { get; set; }
        public virtual DbSet<ProfesionalesEspecialidades> ProfesionalesEspecialidades { get; set; }
    
        public virtual int PacienteCreate(string codigo, string nombre, string apellido, string documentoNro, Nullable<int> documentoTipo, Nullable<System.DateTime> fechaNacimiento, string domicilio, string mail)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var documentoNroParameter = documentoNro != null ?
                new ObjectParameter("DocumentoNro", documentoNro) :
                new ObjectParameter("DocumentoNro", typeof(string));
    
            var documentoTipoParameter = documentoTipo.HasValue ?
                new ObjectParameter("DocumentoTipo", documentoTipo) :
                new ObjectParameter("DocumentoTipo", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteCreate", codigoParameter, nombreParameter, apellidoParameter, documentoNroParameter, documentoTipoParameter, fechaNacimientoParameter, domicilioParameter, mailParameter);
        }
    }
}
